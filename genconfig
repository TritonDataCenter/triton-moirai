#!/bin/bash

#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

# Copyright 2024 MNX Cloud, Inc.

set -o errexit
set -o pipefail

PATH=/opt/triton/lb/build/node/bin:$PATH

skel_config_dir=/opt/triton/lb/haproxy.cfg
real_config_dir=/opt/local/etc/haproxy.cfg
candidate_config_dir=$(mktemp -d /tmp/haproxy.cfg.XXXXXX)

function cleanup {
    rm -rf "${candidate_config_dir:?}"
    exit 0
}

function ensure_haproxy {
    haproxy_state=$(svcs -Ho state haproxy)
    case "$haproxy_state" in
        disabled)
            svcadm enable -s haproxy ;;
        maintenance)
            svcadm clear haproxy ;;
        online)
            # Graceful restart of haproxy to avoid disrupting any connections.
            # Don't let this fail so we don't get caught by errexit.
            pkill -USR2 -c "$(svcs -Ho ctid haproxy)" haproxy || true;;
        *)
            echo 'HAProxy non-actionable state: %s' "$haproxy_state"
            ;;
    esac
}

rsync -a "${skel_config_dir}/" "${candidate_config_dir}/"
cat << EOF > "${candidate_config_dir}/100-services.cfg"
#                                                  #
# ## DO NOT EDIT. THIS FILE WILL BE OVERWRITTEN ## #
#                                                  #
EOF

/opt/triton/lb/parser.js > "${candidate_config_dir}/100-services.cfg"

if diff -qr "${real_config_dir}" "${candidate_config_dir}"; then
    echo 'Config is unchanged.'
    ensure_haproxy
    cleanup
fi

# Config is different. Continuing.
if haproxy -c -f "${candidate_config_dir}"; then
    # Candidate config is good.
    rsync -a --delete "${candidate_config_dir}/" "${real_config_dir}/"
    ensure_haproxy
fi

cleanup
